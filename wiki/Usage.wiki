#summary Using the API

==Javascript==

All the operations available on the client side are performed using a single object instance: [http://code.google.com/p/java-large-file-uploader/wiki/JavaLargeFileUploader JavaLargeFileUploader].

==Java==

On the Java side, there are two kind of possible interactions:

===Listener===

JLFU provides a Listener system that lets you listen to pretty much everything happening on the server side:

{{{
onNewClient(clientId)
onClientBack(clientId)
onClientInactivity(clientId, inactivityTime)
onFileUploadEnd(clientId, fileId)
onFileUploadPrepared(clientId, fileId)
onAllFileUploadsPrepared(clientId, fileIds)
onFileUploadCancelled(clientId, fileId)
onFileUploadPaused(clientId, fileId)
onFileUploadResumed(clientId, fileId)
onFileUploadProgress(clientId, fileId, FileProgressStatus)
}}}

You can register a JLFUListener (or an JLFUListenerAdapter) to the JLFUListenerPropagator which will propagates all the events to the registered listeners:

===Service===

JLFU also provides a few methods in JavaLargeFileUploaderService like:
{{{
getProgress(clientId, fileId)
updateEntity(clientId, entity)
writeEntity(clientId, entity)
writeEntity(File, entity)
getEntityIfPresent(clientId)
clearFile(clientId, fileId)
clearClient(clientId)
}}}